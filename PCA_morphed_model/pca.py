"""Fill in a module description here"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_pca.ipynb.

# %% auto 0
__all__ = ['run_PCA']

# %% ../nbs/02_pca.ipynb 3
import numpy as np
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler


# %% ../nbs/02_pca.ipynb 4
def run_PCA (data_array: np.array ):  # array containing coordinates of nodes

    """ runs PCA, steps: 
            1: Standardizes the data
            2: Runs PCA
            3: Extracts Coefficients (Loadings), Scores and pca_mean
            4: Plots the histogram and cumulative of the PCA explained variance ratio

    """
    # 1: Standardize the data
    scaler = StandardScaler(with_mean=False, with_std=False)
    nodes_standardized = scaler.fit_transform(data_array)

    # 2: Apply PCA
    pca = PCA()  
    nodes_pca = pca.fit_transform(nodes_standardized)
                                                                                                               
    # 3: Extract Coefficients (Loadings), Scores and pca_mean
    explained_variance = pca.explained_variance_ratio_  # Variance explained by each PC
    coefficients = pca.components_.T  # Transposed to align features with components
    scores = nodes_pca  # Transformed data in the new space (projections)

    
    pca_mean = pca.mean_   
    

    # Plot the histogram of the PCA explained variance ratio
    plt.figure(figsize=(6, 6))
    plt.bar(range(1, len(explained_variance) + 1), explained_variance * 100, alpha=0.7, color='b')

    plt.xticks(range(1, len(explained_variance) + 1))
    plt.yticks(np.arange(0, 101, 10))
    plt.xlabel('Principal Components', fontsize=15)
    plt.ylabel('Explained Variance Ratio',fontsize=15)
    plt.title('Histogram of PCA Explained Variance Ratio', fontsize=20, fontdict={'weight': 'bold'})
    plt.show()

    # Cumulative sum of explained variance
    cumulative_variance = np.cumsum(explained_variance)

    # Plot cumulative variance
    plt.figure(figsize=(8, 5))
    plt.plot(range(1, len(cumulative_variance) + 1), cumulative_variance, marker='o', linestyle='--')
    plt.xlabel("Number of Principal Components")
    plt.ylabel("Cumulative Variance Explained")
    plt.title("Cumulative Sum of Variance Explained")
    plt.grid()
    plt.show()

    return coefficients,scores, explained_variance, pca_mean

