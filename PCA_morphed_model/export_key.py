# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/04_export_key.ipynb.

# %% auto 0
__all__ = ['export_key_file']

# %% ../nbs/04_export_key.ipynb 1
import numpy as np

# %% ../nbs/04_export_key.ipynb 2
def export_key_file(coordinates: list[list[float]] , #coordinates of nodes
                    shells_array: np.array, #shells of morphed model, each shell enclosed by nodes
                    id_nodes: list[int], # id of nodes of morphed model
                    file_name: list[str]): # new file name
    
    """ This function creates a key file with given coordinates and shell elements. """
    
    x_data = [point[0] for point in coordinates]
    y_data = [point[1] for point in coordinates]
    z_data = [point[2] for point in coordinates]
    
    id_shells = shells_array[:,0]
    n_fix_shells = shells_array[:,1]
    shells_without_id_array = shells_array[:, 2:]
    p1= shells_without_id_array[:,0]
    p2= shells_without_id_array[:,1]
    p3= shells_without_id_array[:,2]
    p4= shells_without_id_array[:,3]


#create .key file with quad faces
    with open(file_name, "w") as file:
        # Write header
            file.write("*KEYWORD\n")
            
            # Write nodes
            file.write("*NODE\n")
            for i in range(len(x_data)):
                file.write(f"{int(id_nodes[i]):8d}{x_data[i]:16.4f}{y_data[i]:16.4f}{z_data[i]:16.4f}       0       0\n")    

            # Write elements 
            file.write("*ELEMENT_SHELL\n")
            for i in range(len(id_shells)):
                file.write(f"{id_shells[i]}{n_fix_shells[i]}{p1[i]}{p2[i]}{p3[i]}{p4[i]}\n")

            # End of file
            file.write("*END\n")
